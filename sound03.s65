; ポーズ解除時の音(オリジナルではポーズ時にサウンドを尻切れにする処理が入っている)

.include "common.inc"

;---------------------------------------------------------------------
.segment "ZP" : zeropage
;---------------------------------------------------------------------

sound_started: .res 1
sound_stopped: .res 1

timer: .res 1

;---------------------------------------------------------------------
.segment "CODE"
;---------------------------------------------------------------------

RESET: ; {{{
        sei
        cld

        ldx     #$FF
        txs

        lda     #0
        sta     PPU_CTRL        ; NMI 無効
        sta     PPU_MASK        ; 描画無効
        sta     APU_DMC         ; DMC IRQ 無効

        ldx     #60
        jsr     WaitVblanks

        jsr     InitSound
        jsr     EnableNMI

@loop:
        jmp     @loop
; }}}

;;; VBLANK を X 回待つ。
WaitVblanks: ; {{{
        bit     PPU_STATUS
@loop:
        bit     PPU_STATUS
        bpl     @loop
        dex
        bne     @loop

        rts
; }}}

InitSound: ; {{{
        lda     #APU_FRAME_STEP4
        sta     APU_FRAME

        lda     #APU_STATUS_SQ1 | APU_STATUS_SQ2 | APU_STATUS_TRI | APU_STATUS_NOI
        sta     APU_STATUS

        lda     #0
        sta     sound_started
        sta     sound_stopped

        rts
; }}}

EnableNMI: ; {{{
        lda     #PPU_CTRL_NMI_ENABLE
        sta     PPU_CTRL

        rts
; }}}

NMI: ; {{{
        pha
        txa
        pha
        tya
        pha

        jsr     SoundTick

        pla
        tay
        pla
        tax
        pla

        rti
; }}}

SoundTick: ; {{{
        lda     sound_stopped
        beq     @tick
        rts

@tick:
        lda     sound_started
        bne     @update_sound

@start_sound:
        lda     #1
        sta     sound_started
        jmp     SoundStart

@update_sound:
        jmp     SoundUpdate
; }}}

SoundStop: ; {{{
        lda     #1
        sta     sound_stopped

        rts
; }}}

SoundStart: ; {{{
        lda     #21
        sta     timer
        jmp     Go
; }}}

SoundUpdate: ; {{{
        dec     timer
        beq     SoundStop

        jmp     Go
; }}}

Go: ; {{{
        lda     timer
        cmp     #21
        beq     @play_hi
        cmp     #14
        beq     @play_lo
        cmp     #7
        beq     @play_hi
        rts

@play_lo:
        ldy     #128
        jmp     @play

@play_hi:
        ldy     #80
        jmp     @play

@play:
        lda     #APU_SQ_VOLUME_ENVELOPE(8) | APU_SQ_DUTY_EIGHTH
        sta     APU_SQ2
        lda     #APU_SQ_SWEEP_NEGATE
        sta     APU_SQ2+1
        sty     APU_SQ2+2
        lda     #APU_SQ_LENGTH_COUNTER_LOAD(8)
        sta     APU_SQ2+3

        lda     #APU_SQ_VOLUME_ENVELOPE(8) | APU_SQ_DUTY_EIGHTH
        sta     APU_SQ1
        lda     #APU_SQ_SWEEP_NEGATE
        sta     APU_SQ1+1
        lda     #128
        sta     APU_SQ1+2
        lda     #APU_SQ_LENGTH_COUNTER_LOAD(8)
        sta     APU_SQ1+3

        rts
; }}}

IRQ: ; {{{
        .byte   $02     ; kil
; }}}
